import java.util.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import javax.swing.*;
import java.lang.Math;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author admin
 */
public class Calculator extends javax.swing.JFrame {
    String exp = "";
    String showexp = "";
    String ans = "";
    String result = "";
    /**
     * Creates new form MainFrame
     */
    public Calculator() {
        initComponents();
        setTitle("공학용 계산기");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The expression of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gridPanel = new javax.swing.JPanel();
        btnAC = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnFac = new javax.swing.JButton();
        btnAns = new javax.swing.JButton();
        btnBracketLeft = new javax.swing.JButton();
        btnBracketRight = new javax.swing.JButton();
        btnMod = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        btnSin = new javax.swing.JButton();
        btnLog = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnPi = new javax.swing.JButton();
        btnCos = new javax.swing.JButton();
        btnLn = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();
        btnRoot = new javax.swing.JButton();
        btnTan = new javax.swing.JButton();
        btn10Power = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnMul = new javax.swing.JButton();
        btnSig = new javax.swing.JButton();
        btnFoun = new javax.swing.JButton();
        btnPower = new javax.swing.JButton();
        btnDot = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnEqual = new javax.swing.JButton();
        btnDiv = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblResult = new javax.swing.JLabel();
        tfdExp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        gridPanel.setBackground(new java.awt.Color(0, 0, 0));
        gridPanel.setLayout(new java.awt.GridLayout(5, 7));

        btnAC.setText("AC");
        btnAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnACActionPerformed(evt);
            }
        });
        gridPanel.add(btnAC);

        btnDel.setText("Del");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        gridPanel.add(btnDel);

        btnFac.setText("x!");
        btnFac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacActionPerformed(evt);
            }
        });
        gridPanel.add(btnFac);

        btnAns.setText("Ans");
        btnAns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnsActionPerformed(evt);
            }
        });
        gridPanel.add(btnAns);

        btnBracketLeft.setText("(");
        btnBracketLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBracketLeftActionPerformed(evt);
            }
        });
        gridPanel.add(btnBracketLeft);

        btnBracketRight.setText(")");
        btnBracketRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBracketRightActionPerformed(evt);
            }
        });
        gridPanel.add(btnBracketRight);

        btnMod.setText("%");
        btnMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModActionPerformed(evt);
            }
        });
        gridPanel.add(btnMod);

        btnE.setText("e");
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });
        gridPanel.add(btnE);

        btnSin.setText("sin");
        btnSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinActionPerformed(evt);
            }
        });
        gridPanel.add(btnSin);

        btnLog.setText("log");
        btnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogActionPerformed(evt);
            }
        });
        gridPanel.add(btnLog);

        btn1.setBackground(new java.awt.Color(255, 255, 255));
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        gridPanel.add(btn1);

        btn2.setBackground(new java.awt.Color(255, 255, 255));
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        gridPanel.add(btn2);

        btn3.setBackground(new java.awt.Color(255, 255, 255));
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        gridPanel.add(btn3);

        btnPlus.setText("+");
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });
        gridPanel.add(btnPlus);

        btnPi.setText("π");
        btnPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPiActionPerformed(evt);
            }
        });
        gridPanel.add(btnPi);

        btnCos.setText("cos");
        btnCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosActionPerformed(evt);
            }
        });
        gridPanel.add(btnCos);

        btnLn.setText("ln");
        btnLn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLnActionPerformed(evt);
            }
        });
        gridPanel.add(btnLn);

        btn4.setBackground(new java.awt.Color(255, 255, 255));
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        gridPanel.add(btn4);

        btn5.setBackground(new java.awt.Color(255, 255, 255));
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        gridPanel.add(btn5);

        btn6.setBackground(new java.awt.Color(255, 255, 255));
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        gridPanel.add(btn6);

        btnMinus.setText("-");
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });
        gridPanel.add(btnMinus);

        btnRoot.setText("√");
        btnRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRootActionPerformed(evt);
            }
        });
        gridPanel.add(btnRoot);

        btnTan.setText("tan");
        btnTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTanActionPerformed(evt);
            }
        });
        gridPanel.add(btnTan);

        btn10Power.setText("10^x");
        btn10Power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10PowerActionPerformed(evt);
            }
        });
        gridPanel.add(btn10Power);

        btn7.setBackground(new java.awt.Color(255, 255, 255));
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        gridPanel.add(btn7);

        btn8.setBackground(new java.awt.Color(255, 255, 255));
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        gridPanel.add(btn8);

        btn9.setBackground(new java.awt.Color(255, 255, 255));
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        gridPanel.add(btn9);

        btnMul.setText("*");
        btnMul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMulActionPerformed(evt);
            }
        });
        gridPanel.add(btnMul);

        btnSig.setText("Σ");
        btnSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSigActionPerformed(evt);
            }
        });
        gridPanel.add(btnSig);

        btnFoun.setText("1/x");
        btnFoun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFounActionPerformed(evt);
            }
        });
        gridPanel.add(btnFoun);

        btnPower.setText("x^y");
        btnPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerActionPerformed(evt);
            }
        });
        gridPanel.add(btnPower);

        btnDot.setBackground(new java.awt.Color(255, 255, 255));
        btnDot.setText(".");
        btnDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotActionPerformed(evt);
            }
        });
        gridPanel.add(btnDot);

        btn0.setBackground(new java.awt.Color(255, 255, 255));
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });
        gridPanel.add(btn0);

        btnEqual.setBackground(new java.awt.Color(0, 51, 204));
        btnEqual.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
        btnEqual.setForeground(new java.awt.Color(255, 255, 255));
        btnEqual.setText("=");
        btnEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualActionPerformed(evt);
            }
        });
        gridPanel.add(btnEqual);

        btnDiv.setText("/");
        btnDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivActionPerformed(evt);
            }
        });
        gridPanel.add(btnDiv);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new java.awt.GridLayout(2, 0));

        lblResult.setFont(new java.awt.Font("함초롬돋움", 0, 48)); // NOI18N
        lblResult.setForeground(new java.awt.Color(255, 255, 255));
        lblResult.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(lblResult);

        tfdExp.setBackground(new java.awt.Color(0, 0, 0));
        tfdExp.setFont(new java.awt.Font("함초롬돋움", 0, 60)); // NOI18N
        tfdExp.setForeground(new java.awt.Color(255, 255, 255));
        tfdExp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfdExp.setBorder(null);
        tfdExp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdExpKeyPressed(evt);
            }
        });
        jPanel1.add(tfdExp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gridPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gridPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        exp = exp + "1";
        showexp = showexp + "1";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        exp = exp + "2";
        showexp = showexp + "2";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        exp = exp + "3";
        showexp = showexp + "3";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        exp = exp + "4";
        showexp = showexp + "4";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        exp = exp + "5";
        showexp = showexp + "5";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
        exp = exp + "6";
        showexp = showexp + "6";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here:
        exp = exp + "7";
        showexp = showexp + "7";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here:
        exp = exp + "8";
        showexp = showexp + "8";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        // TODO add your handling code here:
        exp = exp + "9";
        showexp = showexp + "9";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        // TODO add your handling code here:
        if(exp.length() == 0) {
            lblResult.setText("잘못된 수식입니다.");
        } else {
            exp = exp + "0";
            showexp = showexp + "0";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnBracketLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBracketLeftActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "(";
            showexp = showexp + "(";
            tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "(";
                showexp = showexp + "(";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*(";
                showexp = showexp + "(";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnBracketLeftActionPerformed

    private void btnBracketRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBracketRightActionPerformed
        // TODO add your handling code here:
        exp = exp + ")";
        showexp = showexp + ")";
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btnBracketRightActionPerformed

    private void btnModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            lblResult.setText("잘못된 수식입니다.");
            tfdExp.setText("");
        } else {
            exp = exp + "%";
            showexp = showexp + "%";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnModActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            lblResult.setText("잘못된 수식입니다.");
            tfdExp.setText("");
        } else {
            exp = exp + "+";
            showexp = showexp + "+";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            lblResult.setText("잘못된 수식입니다.");
            tfdExp.setText("");
        } else {
            exp = exp + "-";
            showexp = showexp + "-";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnMulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMulActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            lblResult.setText("잘못된 수식입니다.");
            tfdExp.setText("");
        } else {
            exp = exp + "*";
            showexp = showexp + "*";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnMulActionPerformed

    private void btnDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            lblResult.setText("잘못된 수식입니다.");
            tfdExp.setText("");
        } else {
            exp = exp + "/";
            showexp = showexp + "/";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnDivActionPerformed

    private void btnEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualActionPerformed
        // TODO add your handling code here: 
        try {
            char carg = exp.charAt(exp.length() - 1);
            if(exp == "") {
                lblResult.setText("수식을 입력해주세요.");
                tfdExp.setText("");
            } else {
                result = Calculate(exp);
                lblResult.setText(result);
                exp = "";
                showexp = "";
                tfdExp.setText(showexp);
            }
        } catch(Exception e) {
            exp = "";
            showexp = "";
            tfdExp.setText(showexp);
            lblResult.setText("계산불가");
        }
    }//GEN-LAST:event_btnEqualActionPerformed

    private void btnACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnACActionPerformed
        // TODO add your handling code here:
        exp = "";
        showexp = "";
        tfdExp.setText(showexp);
        lblResult.setText("");
    }//GEN-LAST:event_btnACActionPerformed

    private void btnLnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLnActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "L";
            showexp = showexp + "ln";
            tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "L";
                showexp = showexp + "ln";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*L";
                showexp = showexp + "ln";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnLnActionPerformed

    private void btnPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            lblResult.setText("잘못된 수식입니다.");
            tfdExp.setText("");
        } else {
            exp = exp + "^";
            showexp = showexp + "^";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnPowerActionPerformed

    private void btnRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRootActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "√";
            showexp = showexp + "√";
        tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "√";
                showexp = showexp + "√";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*√";
                showexp = showexp + "√";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnRootActionPerformed

    private void btnFacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacActionPerformed
        // TODO add your handling code here:
        try {
            if(exp.length() == 0) {
                lblResult.setText("잘못된 수식입니다.");
            } else {
                char tmp;
                for(int i = 0; i < exp.length(); i++) {
                    tmp = exp.charAt(i);
                    if(Character.isDigit(tmp) == true) {
                        double doubleexp = Integer.parseInt(exp);
                        int intexp = (int)doubleexp;
                        result = Double.toString(factorial(intexp));
                        exp = "";
                        showexp = "";
                        lblResult.setText(result);
                        tfdExp.setText(showexp);
                        ans = result;
                    } else {
                        lblResult.setText("잘못된 수식입니다.");
                        tfdExp.setText("");
                    }
                }
            }
        } catch(Exception e) {
            exp = "";
            showexp = "";
            tfdExp.setText(showexp);
            lblResult.setText("계산불가");
        }
    }//GEN-LAST:event_btnFacActionPerformed

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "l";
            showexp = showexp + "log";
            tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "l";
                showexp = showexp + "log";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*l";
                showexp = showexp + "log";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnLogActionPerformed

    private void btnSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "s";
            showexp = showexp + "sin";
            tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "s";
                showexp = showexp + "sin";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*s";
                showexp = showexp + "sin";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnSinActionPerformed

    private void btnCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "c";
            showexp = showexp + "cos";
            tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "c";
                showexp = showexp + "cos";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*c";
                showexp = showexp + "cos";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnCosActionPerformed

    private void btnTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTanActionPerformed
        // TODO add your handling code here:
        if(exp == ""){
            exp = exp + "t";
            showexp = showexp + "tan";
            tfdExp.setText(showexp);
        } else {
            char carg = exp.charAt(exp.length() - 1);
            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                        || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                exp = exp + "t";
                showexp = showexp + "tan";
                tfdExp.setText(showexp);
            } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                exp = exp + "*t";
                showexp = showexp + "tan";
                tfdExp.setText(showexp);
            }
        }
    }//GEN-LAST:event_btnTanActionPerformed

    private void btnSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSigActionPerformed
        // TODO add your handling code here:
        try {
            if(exp.length() == 0) {
                lblResult.setText("잘못된 수식입니다.");
            } else {
                char tmp;
                for(int i = 0; i < exp.length(); i++) {
                    tmp = exp.charAt(i);
                    if(Character.isDigit(tmp) == true) {
                        double doubleexp = Integer.parseInt(exp);
                        result = Double.toString(sigma(doubleexp));
                        exp = "";
                        showexp = "";
                        lblResult.setText(result);
                        tfdExp.setText(showexp);
                        ans = result;
                    } else {
                        lblResult.setText("잘못된 수식입니다.");
                        tfdExp.setText("");
                    }
                }
            }
        } catch(Exception e) {
            exp = "";
            showexp = "";
            tfdExp.setText(showexp);
            lblResult.setText("계산불가");
        }
    }//GEN-LAST:event_btnSigActionPerformed

    private void btnPiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPiActionPerformed
        // TODO add your handling code here:
        char carg = exp.charAt(exp.length() - 1);
        if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
            exp = exp + "3.14159265359";
            showexp = showexp + "π";
        } else {
            exp = exp + "*3.14159265359";
            showexp = showexp + "π";
        }
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btnPiActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        exp = exp.substring(0, exp.length() - 1);
        showexp = showexp.substring(0, showexp.length() - 1);
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
        // TODO add your handling code here:
        char carg = exp.charAt(exp.length() - 1);
        if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
            exp = exp + "2.71828182846";
            showexp = showexp + "e";
        } else {
            exp = exp + "*2.71828182846";
            showexp = showexp + "e";
        }
        tfdExp.setText(showexp);
    }//GEN-LAST:event_btnEActionPerformed

    private void btnFounActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFounActionPerformed
        // TODO add your handling code here:
        try {
             if(exp.length() == 0) {
            lblResult.setText("잘못된 수식입니다.");
        } else {
            char tmp;
            for(int i = 0; i < exp.length(); i++) {
                tmp = exp.charAt(i);
                if(Character.isDigit(tmp) == true) {
                    double doubleexp = Integer.parseInt(exp);
                    result = Double.toString(fountain(doubleexp));
                    exp = "";
                    showexp = "";
                    lblResult.setText(result);
                    tfdExp.setText(showexp);
                    ans = result;
                } else {
                    lblResult.setText("잘못된 수식입니다.");
                    tfdExp.setText("");
                }
            }
        }
        } catch(Exception e) {
            exp = "";
            showexp = "";
            tfdExp.setText(showexp);
            lblResult.setText("계산불가");
        }
    }//GEN-LAST:event_btnFounActionPerformed

    private void btn10PowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10PowerActionPerformed
        // TODO add your handling code here:
        try {
            if(exp.length() == 0) {
                lblResult.setText("잘못된 수식입니다.");
            } else {
                char tmp;
                for(int i = 0; i < exp.length(); i++) {
                    tmp = exp.charAt(i);
                    if(Character.isDigit(tmp) == true) {
                        double doubleexp = Integer.parseInt(exp);
                        doubleexp = Math.pow(10, doubleexp);
                        result = Double.toString(doubleexp);
                        exp = "";
                        showexp = "";
                        lblResult.setText(result);
                        tfdExp.setText(showexp);
                    } else {
                        lblResult.setText("잘못된 수식입니다.");
                        tfdExp.setText("");
                    }
                }
            }
        } catch(Exception e) {
            exp = "";
            showexp = "";
            tfdExp.setText(showexp);
            lblResult.setText("계산불가");
        }
    }//GEN-LAST:event_btn10PowerActionPerformed

    private void btnAnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnsActionPerformed
        // TODO add your handling code here:
        if(lblResult.getText().length() == 0) {
            lblResult.setText("기록이 없습니다.");
        } else {
            ans = result;
            exp = exp + ans;
            showexp = showexp + ans;
            tfdExp.setText(ans);
            lblResult.setText("");
        }
    }//GEN-LAST:event_btnAnsActionPerformed

    private void btnDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotActionPerformed
        // TODO add your handling code here:
        if(exp == "") {
            exp = exp + "0.";
            showexp = showexp + "0.";
            tfdExp.setText(showexp);
        } else {
            exp = exp + ".";
            showexp = showexp + ".";
            tfdExp.setText(showexp);
        }
    }//GEN-LAST:event_btnDotActionPerformed

    private void tfdExpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdExpKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar() == KeyEvent.VK_ENTER) {
            exp = tfdExp.getText();
            try {
                char carg = exp.charAt(exp.length() - 1);
                if(exp == "") {
                    lblResult.setText("잘못된 수식입니다.");
                    tfdExp.setText("");
                } else {
                    result = Calculate(exp);
                    lblResult.setText(result);
                    exp = "";
                    showexp = "";
                    tfdExp.setText(showexp);
                }
            } catch(Exception e) {
                exp = "";
                showexp = "";
                tfdExp.setText(showexp);
                lblResult.setText("계산불가");
            }
        }
    }//GEN-LAST:event_tfdExpKeyPressed
    
    private String Calculate(String expression) {

        char[] operationCode = {'+', '-', '*', '/', '(', ')', '%', '^', '!', '√', 'l', 'L', 's', 'c', 't'}; //연산 부호

        ArrayList<String> postfixList = new ArrayList<String>(); //후위표기법으로 변환 후 저장 할 ArrayList
        Stack<Character> opStack = new Stack<Character>(); // 연산 부호 우선순위처리 하며 후위 표기법으로 변경하는 Stack
        Stack<String> calculatorStack = new Stack<String>(); //후위 표기법을 계산하는 Stack

        int index = 0;//expression.substring() 인수

        for (int i = 0; i < expression.length(); i++) {
            for (int j = 0; j < operationCode.length; j++) {
                if (expression.charAt(i) == operationCode[j]) { //문자열과 연산 부호 비교

                    //postfixList에 연산 부호가 나오기 전까지의 숫자를 담는다(공백제거)
                    postfixList.add(expression.substring(index, i).trim().replace("(", "").replace(")", ""));
                    if (expression.charAt(i) == '(') {
                        if (expression.charAt(i) == ')') {//우 괄호가 나오면 좌 괄호가 나오거나 스택에 비어있을때 까지 pop하여 list에 저장
                            while (true) {
                                postfixList.add(opStack.pop().toString());
                                if (opStack.pop() == '(' || opStack.isEmpty()) {
                                    break;
                                }
                            }
                        }
                    }

                    if (opStack.isEmpty()) { //opStack이 비어 있을 경우
                        opStack.push(operationCode[j]); //연산 부호 저장
                    } else { //opStack이 비어 있지 않을 경우
                        if (opOrder(operationCode[j]) > opOrder(opStack.peek())) { //우선 순위 비교
                            opStack.push(operationCode[j]); //스택에 top 값 보다 높은 우선순위이면 그대로 저장
                        } else if (opOrder(operationCode[j]) <= opOrder(opStack.peek())) {//우선 순위 비교
                            postfixList.add(opStack.peek().toString());//스택에 있는 값이 우선순위가 같거나 작을 경우 list에 저장
                            opStack.pop();//스택 제거
                            opStack.push(operationCode[j]);//높은 우선순위 연산 부호 스택에 저장
                        }
                    }
                    index = i + 1;// 다음 순서 처리
                }
            }
        }
        postfixList.add(expression.substring(index, expression.length()).trim().replace("(", "").replace(")", "")); //마지막 숫자 처리

        if (!opStack.isEmpty()) { //Stack에 남아있는 연산 모두 postfixList에 추가
            for (int i = 0; i < opStack.size();) {
                postfixList.add(opStack.peek().toString());
                opStack.pop();
            }
        }

        //list에 공백, 괄호 제거
        for (int i = 0; i < postfixList.size(); i++) {
            if (postfixList.get(i).equals("")) {
                postfixList.remove(i);
                i = i - 1;
            } else if (postfixList.get(i).equals("(")) {
                postfixList.remove(i);
                i = i - 1;
            } else if (postfixList.get(i).equals(")")) {
                postfixList.remove(i);
                i = i - 1;
            }
        }

        opStack.clear(); //Stack 비우기

        //postfixList를 calculatorStack에 저장하면서 후위연산 처리
        for (int i = 0; i < postfixList.size(); i++) {
            calculatorStack.push(postfixList.get(i));
            for (int j = 0; j < operationCode.length; j++) {
                if (postfixList.get(i).charAt(0) == operationCode[j]) { //연산 부호 비교
                    calculatorStack.pop(); //stack에 저장된 연산 부호 제거
                    double s2, s1; //stack에서 pop 되는 값들을 저장할 변수
                    String rs; // 연산 처리 후 문자열로 변환 후 stack에 저장할 변수

                    String[] arg;
                    char carg;
                            
                    //연산 부호에 해당하는 산술 처리 후 stack에 저장
                    switch (operationCode[j]) {
                        case '+':
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            s1 = Double.parseDouble(calculatorStack.pop());
                            rs = String.valueOf(s1 + s2);
                            calculatorStack.push(rs);
                            break;
                        case '-':
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            s1 = Double.parseDouble(calculatorStack.pop());
                            rs = String.valueOf(s1 - s2);
                            calculatorStack.push(rs);
                            break;
                        case '*':
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            s1 = Double.parseDouble(calculatorStack.pop());
                            rs = String.valueOf(s1 * s2);
                            calculatorStack.push(rs);
                            break;
                        case '/':
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            s1 = Double.parseDouble(calculatorStack.pop());
                            rs = String.valueOf(s1 / s2);
                            calculatorStack.push(rs);
                            break;
                        case '%' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            s1 = Double.parseDouble(calculatorStack.pop());
                            rs = String.valueOf(s1 % s2);
                            calculatorStack.push(rs);
                            break;
                        case '^' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            s1 = Double.parseDouble(calculatorStack.pop());
                            rs = String.valueOf(Math.pow(s1, s2));
                            calculatorStack.push(rs);
                            break;
                        case 'L' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            if(expression.charAt(0) == 'L'){
                                rs = String.valueOf(Math.log(s2));
                                calculatorStack.push(rs);
                            } else {
                                arg = expression.split("L");
                                carg = arg[0].charAt(arg[0].length() - 1);
                                if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(Math.log(s2));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(s1 * Math.log(s2));
                                    calculatorStack.push(rs);
                                }
                            }
                            break;
                        case 'l' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            if(expression.charAt(0) == 'l'){
                                rs = String.valueOf(Math.log10(s2));
                                calculatorStack.push(rs);
                            } else {
                                arg = expression.split("l");
                                carg = arg[0].charAt(arg[0].length() - 1);
                                if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(Math.log10(s2));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(s1 * Math.log10(s2));
                                    calculatorStack.push(rs);
                                }
                            }
                            break;
                        case '√' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            if(expression.charAt(0) == '√'){
                                rs = String.valueOf(Math.sqrt(s2));
                                calculatorStack.push(rs);
                            } else {
                                arg = expression.split("√");
                                carg = arg[0].charAt(arg[0].length() - 1);
                                if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(Math.sqrt(s2));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(s1 * Math.sqrt(s2));
                                    calculatorStack.push(rs);
                                }
                            }
                            break;
                        case 's' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            if(expression.charAt(0) == 's'){
                                rs = String.valueOf(Math.sin(Math.toRadians(s2)));
                                calculatorStack.push(rs);
                            } else {
                                arg = expression.split("s");
                                carg = arg[0].charAt(arg[0].length() - 1);
                                if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(Math.sin(Math.toRadians(s2)));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(s1 * Math.sin(Math.toRadians(s2)));
                                    calculatorStack.push(rs);
                                }
                            }
                            break;
                        case 'c' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            if(expression.charAt(0) == 'c'){
                                rs = String.valueOf(Math.cos(Math.toRadians(s2)));
                                calculatorStack.push(rs);
                            } else {
                                arg = expression.split("c");
                                carg = arg[0].charAt(arg[0].length() - 1);
                                if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(Math.cos(Math.toRadians(s2)));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(s1 * Math.cos(Math.toRadians(s2)));
                                    calculatorStack.push(rs);
                                }
                            }
                            break;
                        case 't' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            if(expression.charAt(0) == 't'){
                                rs = String.valueOf(Math.tan(Math.toRadians(s2)));
                                calculatorStack.push(rs);
                            } else {
                                arg = expression.split("t");
                                carg = arg[0].charAt(arg[0].length() - 1);
                                if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(Math.tan(Math.toRadians(s2)));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(s1 * Math.tan(Math.toRadians(s2)));
                                    calculatorStack.push(rs);
                                }
                            }
                            break;
                        case '!' :
                            s2 = Double.parseDouble(calculatorStack.pop()); //스택에서 pop하여 문자열을 숫자로 형변환
                            arg = expression.split("!");
                            carg = arg[arg.length - 1].charAt(0);
                            if(carg == '+' || carg == '-' || carg == '*' || carg == '/' || carg == '(' || carg == ')' || carg == '%' 
                                    || carg == '^' || carg == '!' || carg == '√' || carg == 'l' || carg == 'L' || carg =='s' || carg =='c' || carg =='t') {
                                    rs = String.valueOf(factorial((int)s2));
                                    calculatorStack.push(rs);
                                } else if(carg == '0' || carg == '1' || carg == '2' || carg == '3' || carg == '4' || carg == '5' || carg == '6' || carg == '7' || carg == '8' || carg == '9') {
                                    s1 = Double.parseDouble(calculatorStack.pop());
                                    rs = String.valueOf(factorial((int)s2) * s1);
                                    calculatorStack.push(rs);
                                }
                            break;
                    }
                }
            }
        }

        double re = Double.parseDouble(calculatorStack.peek()); //Stack Top 데이터 
        String result = String.format("%.10f", re); //소수점 10째짜리

        //정수 부분 자리 구하기
        int num = 0;
        for (int i = 0; i < result.length(); i++) {
            if (result.charAt(i) == '.') {
                num = i;
                break;
            }
        }

        //정수부분
        String mok = result.substring(0, num);

        //나머지 연산
        double divde = Double.parseDouble(result) % Double.parseDouble(mok);

        //나머지가 0이면 소수점 자릿 수 안보이게
        if (divde == 0) {
            result = String.format("%.0f", re);
        }

        return result;
    }

    public static int opOrder(char op) {
        switch (op) {
            case '+' :
            case '-' :
                return 1;
            case '*' :
            case '/' :
            case '%' :
                return 2;
            case '^' :
            case '√' :
            case 'l' :
            case 'L' :
            case 's' :
            case 'c' :
            case 't' :
                return 3;
            case '(' :
            case ')' :
                return 4;
            default :
                return -1;
        }
    }
    
    public static int factorial(int n) {
        if (n <= 1)
            return 1;
        return n * factorial(n - 1);
    }
    
    public static double fountain(double n) {
        return 1 / n;
    }
    
    public static double sigma(double n) {
        double sum = 0;
        for(int i = 0; i <= n; i++)
            sum += i;
        return sum;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
    
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10Power;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAC;
    private javax.swing.JButton btnAns;
    private javax.swing.JButton btnBracketLeft;
    private javax.swing.JButton btnBracketRight;
    private javax.swing.JButton btnCos;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDiv;
    private javax.swing.JButton btnDot;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnEqual;
    private javax.swing.JButton btnFac;
    private javax.swing.JButton btnFoun;
    private javax.swing.JButton btnLn;
    private javax.swing.JButton btnLog;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnMod;
    private javax.swing.JButton btnMul;
    private javax.swing.JButton btnPi;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnPower;
    private javax.swing.JButton btnRoot;
    private javax.swing.JButton btnSig;
    private javax.swing.JButton btnSin;
    private javax.swing.JButton btnTan;
    private javax.swing.JPanel gridPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblResult;
    private javax.swing.JTextField tfdExp;
    // End of variables declaration//GEN-END:variables
}
